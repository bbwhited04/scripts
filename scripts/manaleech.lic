=begin
    Mana Leech Script
    Designed to run in the background and automatically 516 for you.
    Great for Bigshot active scripts

    Part of Elanthia Online Scripts Github
    https://github.com/elanthia-online/scripts/

    SYNTAX - ;manaleech

       todo: none
     author: Tysong (horibu on PC)
       name: manaleech
       tags: mana leech, mana, leech, 516, wizard
    version: 2.7

    changelog:
        2.7 (2023-05-19)
            Fix for GROUP output display
        2.6 (2020-02-13)
            Made group friendly, previously only supported solo manaleeching.
        2.5 (2019-05-27)
            Fixed Bigshot's flee_count variable detection method
        2.4 (2019-02-16)
            Added "release" after attempt to cast case did not succeed.
        2.3 (2019-01-03)
            Changed cast() calls to Spell.cast() instead
        2.2 (2018-08-23)
            Fix issue to prevent casting at dead/gone NPCs
        2.1 (2018-06-29)
            Fix for NPC blacklist logic. added hummingbird and constructs
        2.0 (2018-05-10)
            Added an NPC blacklist, so far only has gremlocks and nests(wasps).
        1.0 (2017-03-15)
            Initial Release

    credit & thanks:
        Original script no longer on repo and can't remember original author.
        Took out optional 518 casting and made it specific to mana leech only
=end
=begin
=end

# Time to wait between trying to mana leech again in seconds
UserVars.manaleechsleeptimer ||= 30
# Percent Mana to go below before trying to mana leech
belowpercent = 70
# NPC Blacklist
npc_blacklist = Array['nest', 'gremlock', 'construct', 'hummingbird', 'falcon', 'arm', 'arms']

# Checks to see if Bigshot's variable for flee_count is set, if not, sets it to arbitary high value of 30.
if UserVars.op['flee_count'].nil? || UserVars.op['flee_count'].to_i.zero?
  UserVars.op ||= {}
  UserVars.op['flee_count'] = '30'
end

def groupcheck
  group_count = 1
  group_members = []
  group_leader = nil
  group_members.push(Char.name.to_s)
  fput 'GROUP'
  line = get
  until line =~ /for a list of other options./
    if line =~ /You are (?:leading|grouped with) (.*)\./
      last_match = Regexp.last_match(1)
      last_match.split(/,(?:\s+and)?| and /).map { |x| x.gsub(/ (?:who is \w+|\(\w+\))/, '').strip }.each { |member|
        group_members.push(member)
        group_count += 1
      }
      if (leader = last_match.split(/,(?:\s+and)?| and /).find { |x| x =~ /who is leading|\(leading\)/ })
        group_leader = leader.gsub(/ (?:who is \w+|\(\w+\))/, '').strip
      else
        group_leader = Char.name
      end
    end
    group_leader = Char.name if line =~ /^You are not currently in a group\.$/
    line = get
  end
  [group_members, group_leader, group_count]
end

_group_members, _group_leader, group_count = groupcheck
sleep UserVars.manaleechsleeptimer
loop do
  valid_targets = GameObj.targets.to_a.reject do |npc|
    (npc_blacklist.include?(npc.noun) || npc.type =~ /companion|passive|familiar/ || npc.name =~ /^animated / || npc.status =~ /dead|gone/)
  end
  if (GameObj.pcs.count + 1 == group_count || GameObj.pcs.nil?) && (Spell[9516].timeleft < 15) && Spell[516].affordable? && (percentmana < belowpercent) && valid_targets.count.positive? && valid_targets.count <= UserVars.op['flee_count'].to_i
    pause_script('bigshot')
    pause_script('botcamp')
    waitrt?
    put 'stance defensive' if stance !~ /defensive|guarded/
    waitcastrt?
    Spell[516].cast(valid_targets.first.noun) if !muckled? && valid_targets.first.status !~ /dead|gone/ && (GameObj.pcs.count + 1 == group_count || GameObj.pcs.nil?)
    unpause_script('bigshot')
    unpause_script('botcamp')
    sleep 1
    put 'release' if checkprep == 'Mana Leech'
    sleep UserVars.manaleechsleeptimer - 1
  end
  sleep 0.25
end
